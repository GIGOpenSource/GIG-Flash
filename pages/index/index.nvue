<template>
	<view class="pageBox">
		<tw-videon ref="videoGroup" @lodData="loadingData" @refreshData="refreshData" :autoplay="autoplay" :nextPlay="nextPlay" :loopPlay="loopPlay"
		 @doubleClick="doubleClick" @longpress="longpress" @swiperChange="swiperChange" :totalvod="totalvod"></tw-videon>
		 
		<view class="automatic">
			<view class="automatic-item" @click="openAutomatic">点击{{nextPlay?'关闭自动播放':'开启自动播放'}}</view>
			<view class="automatic-item" @click="specifyPlay(currIndex + 1)">点击指定第{{currIndex + 1}}个视频播放</view>
		</view>
		
		
		<!-- 评论 -->
		<comment-popup ref="commentRef" v-model="commentVisible" :commentInfo="commentInfo" @submitComment="submitComment"/>
		
		<!-- 转发弹窗 -->
		<forwardMenu v-model="showForward" :forwardInfo="commentInfo"></forwardMenu>
		
	</view>
</template>

<script>
	
	import twVideon from '@/components/tsp-video/tsp-video-list/video-n.nvue';
	import commentPopup from '@/components/tsp-video/comment/comment-popup.vue'
	import forwardMenu from '@/components/tsp-video/forward-menu/forward-menu.vue'
	
	import { getVodData } from '@/static/js/vodData.js' //假数据
	
	export default{
		components:{
			twVideon,
			commentPopup,
			forwardMenu
		},
		data(){
			return {
				videoData: [],
				autoplay:true,
				nextPlay:false,
				loopPlay:true,
				tNum:0,
				currIndex:0,
				totalvod:0, //视频总数量，有值才能滑动加载到最后一个视频并禁止循环滑动（仅H5、小程序支持）
				commentVisible: false, //是否显示评论弹窗
				commentInfo: {},
				openVodCommentIndex: null, //已经打开视频评论加载的下标
				showForward: false, //是否显示转发弹窗
			}
		},
		onReady() {
			
			/* 监听打开评论*/
			uni.$on('updateOpenComment',(data)=>{
				console.log('data',data);
				this.commentInfo = data.item
				this.commentVisible = true
				this.$nextTick(()=>{
					if(this.openVodCommentIndex != data.vodCurIndex){ 
						this.openVodCommentIndex = data.vodCurIndex
						this.$refs.commentRef.loadData() //调用评论组件的加载方法
					}
				})
			})
			
			/* 监听打开转发*/
			uni.$on('updateOpenForward',(data)=>{
				this.commentInfo = data.item
				this.showForward = true
			})
		},
		onLoad() {
			this.videoData = getVodData()
			// #ifdef H5
			this.autoplay = false
			// #endif
			this.initVod()
		},
		onShow() {
			/* 播放视频 */
			if(this.$refs.videoGroup){
				this.$refs.videoGroup.showPlay()
				this.$refs.videoGroup.muteVideo(false) //取消视频播放设置为静音，解决切换到其他页面后因为网络问题还在有声音播放
			}
		},
		onHide() {
			/* 暂停视频 */
			if(this.$refs.videoGroup){
				this.$refs.videoGroup.hidePause()
				this.$refs.videoGroup.muteVideo(true) //视频播放设置为静音，解决切换到其他页面后因为网络问题还在有声音播放
			}
		},
		methods:{
			startData(){
				let list = []
				/* 模拟请求 */
				return new Promise((resolve, reject)=>{
					setTimeout(()=>{
						let dataList = JSON.parse(JSON.stringify(this.videoData))
						dataList.filter((item,index)=>{
							/** 参数数据自行拼接  */
							item.tsId = 'tsId' + (this.tNum * 15 + index) //视频id，用于删除视频, 需要改成自己的视频id
							item.vodUrl = item.src
							item.coverImg = item.coverImg //视频封面
							item.coverShow = false //是否显示视频封面，vue 小程序端不播放会显示视频，可以不用显示封面，App不播放不会显示视频，就需要封面了
							item.object_fit = item.object_fit //视频的显示类型
							item.sliderShow = true //是否显示进度条
							item.rotateImgShow = true //是否显示旋转头像
							item.fabulousShow = false//是否点赞
							item.followReally = false //是否已经关注
						})
						this.tNum += 1
						resolve(dataList)
					},500)
				})
			},
			/* 初始加载视频数据 */
			initVod(){
				this.startData().then((res)=>{
					if(res.length > 0){
						/* 调用视频的初始方法 */
						this.$refs.videoGroup.initVod(res,0); //0是播放的下标（默认播放下标是0）不需要指定视频播放可不传
					}
				})
			},
			/* 下拉刷新 */
			refreshData(){
				this.tNum = 1
				this.startData().then((res)=>{
					if(res.length > 0){
						/* 调用视频的重新加载方法 */
						setTimeout(()=>{
							this.$refs.videoGroup.refreshSquare(res,0); //0是播放的下标（默认播放下标是0）不需要指定视频播放可不传
						},2000)
					}
				})
			},
			/* 上拉加载 */
			loadingData(){
				this.startData().then((res)=>{
					if(res.length > 0){
						/* 调用视频的到底加载方法方法 */
						this.$refs.videoGroup.lodingData(res);
					}
				})
			},
			/* 双击回调 */
			doubleClick(event){
				// console.log('双击当前视频回调',event)
			},
			/* 长按当前视频回调 */
			longpress(event,list){
				// console.log('长按当前视频回调',event)
			},
			/* swiper切换当前视频回调 */
			swiperChange(event){
				// console.log('swiper切换当前视频回调',event)
				this.currIndex = event.videoIndex
			},
			/* 是否开启自动播放 */
			openAutomatic(){
				this.nextPlay = !this.nextPlay
				this.loopPlay = this.nextPlay ? false : true
			},
			/* 选择指定视频下标播放 下标是从0开始*/
			specifyPlay(playIndex){
				/* 调用选择指定视频下标播放 */
				this.$refs.videoGroup.scrollToVod(playIndex);
			},
			/* 评论组件内容回调 */
			submitComment(val){
				console.log(val)
			},
		}
	}
</script>

<style>
	.pageBox{
		/* #ifndef APP-NVUE */
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		/* #endif */
		background-color: #000000;
		flex: 1;
	}
	.automatic{
		position: absolute;
		/* #ifndef APP-NVUE */
		z-index: 20;
		/* #endif */
		top: 150rpx;
		left: 50rpx;
	}
	.automatic-item{
		margin-top: 15rpx;
		font-size: 32rpx;
		color: blue;
	}
</style>